---
import { Image } from "astro:assets";
import type { Project } from "content/models/projects";
interface Props {
  project: Project;
}
const { id, title, primaryImage } = Astro.props.project;
---

<div class="container">
  <!-- {primaryImage && <Image src={primaryImage} quality={100} alt={title} />} -->
  {
    primaryImage && (
      <Image
        src={primaryImage}
        quality={100}
        alt={title}
        data-project-image={id}
      />
    )
  }
  <h2>Project Details</h2>
  <astro-heart>
    <button aria-label="Heart">ðŸ’œ</button> Ã— <span>0</span>
  </astro-heart>
</div>
<style>
  .container {
    /* transition: all 2s; */
    /* width: 500px; */
    /* height: 500px; */
    background: red;
    color: blue;
    &:before {
      content: "";
      position: absolute;
      z-index: 0;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        0.5turn,
        var(--primary-color),
        color-mix(in srgb, var(--primary-color) 50%, black)
      );
      box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.7);
      border-radius: var(--border-radius);
    }
    & img {
      view-transition-name: full-embed;
      contain: layout;
      position: relative;
      width: 100%;
      max-height: 200px;
      object-fit: cover;
      object-position: top left;
      clip-path: polygon(0 0, 100% 0, 100% calc(100% - 50px), 0 100%);
      contain: paint;
    }
    &:after {
      content: "";
      position: absolute;
      z-index: 0;
      top: var(--gap);
      left: var(--gap);
      right: var(--gap);
      bottom: var(--gap);
      background: #151515;
      border-radius: var(--border-radius);
    }
  }
</style>
<script>
  console.log("HELLO");
  // Define the behaviour for our new type of HTML element.
  class AstroHeart extends HTMLElement {
    constructor() {
      super();
      let count = 0;

      const heartButton = this.querySelector("button");
      const countSpan = this.querySelector("span");

      // Each time the button is clicked, update the count.
      heartButton.addEventListener("click", () => {
        count++;
        countSpan.textContent = count;
      });
    }
  }

  // Tell the browser to use our AstroHeart class for <astro-heart> elements.
  customElements.define("astro-heart", AstroHeart);
</script>
