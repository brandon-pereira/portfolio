---
const title = 'Brandon';
const line1 = 'Hi, my name is';
const line2 = 'and I build ';
const words = ['websites', 'apps', 'teams', 'software', 'all the things!'];
---

<header>
  <div class="copy line1">
    <p>{line1}</p>
  </div>
  <div class="name">
    {title.split('').map(l => <span data-letter={l}>{l}</span>)}
  </div>
  <div class="copy line2">
    <p>
      {line2}<br />
      <span data-scroll-text={words.join('|')}>
        <span class="current">{words[0]}</span>
      </span>
    </p>
  </div>
  <div class="scroll-down-arrow"></div>
</header>

<style>
  header {
    --grid-bg: var(--color-primary-800);
    --grid-bg-1: rgba(255, 255, 255, 0.01);
    --grid-bg-2: rgba(255, 255, 255, 0.02);
    --text-color: var(--color-primary-400);
    font-family: var(--font-monospace);
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    position: relative;
    min-height: 80vh;
    padding-bottom: 5rem;
    box-sizing: border-box;
    overflow: hidden;
    box-shadow: 0 5px #000;
    &:before {
      content: '';
      position: absolute;
      inset: 0;
      overflow: hidden;
      background-color: var(--grid-bg);
      background-image: linear-gradient(var(--grid-bg-1) 2px, transparent 2px),
        linear-gradient(90deg, var(--grid-bg-1) 2px, transparent 2px),
        linear-gradient(var(--grid-bg-2) 1px, transparent 1px),
        linear-gradient(90deg, var(--grid-bg-2) 1px, transparent 1px);
      background-size:
        50px 50px,
        50px 50px,
        10px 10px,
        10px 10px;
      animation: bgScroll 2s linear infinite;
    }
  }

  .name {
    max-width: var(--max-width);
    position: relative;
    font-size: min(12vw, 10rem);
    margin: 3vw 0;
  }
  .name span {
    position: relative;
    text-shadow: 10px 10px #000;
  }

  .name span:before {
    content: attr(data-letter);
    text-shadow: none;
    background-color: var(--text-color);
    background-image: linear-gradient(transparent, rgba(0, 0, 0, 0.2)),
      linear-gradient(
        #fff 1px,
        transparent 15px,
        rgba(0, 0, 0, 0.5) 160px,
        transparent 170px
      );
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: 2s linear infinite bgScroll;
    position: absolute;
    top: 0;
  }
  .copy {
    max-width: var(--max-width);
    position: relative;
    font-size: min(5vw, 1.5rem);
    margin: 0;
    color: #fff;
    text-shadow: 5px 5px #000;
    @media (--tablet) {
      br {
        display: none;
      }
    }
    @media (--desktop) {
      font-size: min(6vw, 2rem);
    }
  }
  .line2 {
    line-height: min(8vw, 3rem);
  }

  [data-scroll-text] {
    display: inline;
    position: relative;
    & > :global(span) {
      transition: all 0.2s;
      position: absolute;
      left: 0;
      opacity: 0;
      transform: translateY(50px);
    }
    & > :global(span.current) {
      position: relative;
      transform: translateY(0);
      opacity: 1;
    }
  }

  .name::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    /* This is on purpose to make the glitch 'cooler' */
    content: 'Branclon';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    text-shadow:
      1px 1px 0px color-mix(in srgb, var(--text-color) 80%, #000),
      2px 2px #000,
      -2px -2px #000;
    filter: blur(2px);
    color: transparent;
    clip-path: var(--slice-0);
    animation: glitch 3s infinite;
    text-shadow: 10 10px 10px black;
    animation-timing-function: steps(2, end);
  }

  .scroll-down-arrow {
    position: absolute;
    bottom: 2rem;
    left: 50%;
    height: 2rem;
    width: 2rem;
    translate: -50%;
    rotate: 45deg;
    border-radius: 0 0 5px 0;
    border: 0px solid #fff;
    border-width: 0 2px 2px 0;
    filter: drop-shadow(2px 2px #000);
  }

  /* @media (prefers-color-scheme: light) {
    header {
      --grid-bg: #288fd9;
      --grid-bg-1: rgba(0, 0, 0, 0.05);
      --grid-bg-2: rgba(0, 0, 0, 0.04);
      --text-color: #155481;
    }
  } */

  @keyframes bgScroll {
    from {
      background-position: 100px 100px;
    }
    to {
      background-position: 50px 50px;
    }
  }

  @keyframes path {
    0% {
      clip-path: polygon(3% 5%, 94% 3%, 78% 83%, 18% 82%);
    }
    25% {
      clip-path: polygon(13% 3%, 94% 3%, 92% 95%, 7% 91%);
    }
    50% {
      clip-path: polygon(8% 17%, 66% 0, 100% 71%, 27% 100%);
    }
    75% {
      clip-path: polygon(2% 68%, 9% 5%, 100% 16%, 61% 100%);
    }
    100% {
      clip-path: polygon(9% 88%, 10% 27%, 88% 3%, 88% 95%);
    }
  }

  @keyframes glitch {
    0% {
      clip-path: var(--slice-1);
      transform: translate(-20px, -10px);
    }

    10% {
      clip-path: var(--slice-3);
      transform: translate(10px, 10px);
    }

    20% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 10px);
    }

    30% {
      clip-path: var(--slice-3);
      transform: translate(0px, 5px);
    }

    40% {
      clip-path: var(--slice-2);
      transform: translate(-5px, 0px);
    }

    50% {
      clip-path: var(--slice-3);
      transform: translate(5px, 0px);
    }

    60% {
      clip-path: var(--slice-4);
      transform: translate(5px, 10px);
    }

    70% {
      clip-path: var(--slice-2);
      transform: translate(-10px, 10px);
    }

    80% {
      clip-path: var(--slice-5);
      transform: translate(20px, -10px);
    }

    90% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 0px);
    }

    100% {
      clip-path: var(--slice-1);
      transform: translate(0);
    }
  }
</style>

<script>
  import ScrollText from 'scroll-text';

  document.addEventListener('astro:page-load', () => {
    const el = document.querySelector('[data-scroll-text]');
    if (el) {
      new ScrollText(el);
    }
  });
</script>
